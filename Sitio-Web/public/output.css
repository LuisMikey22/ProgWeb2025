/*! tailwindcss v4.1.14 | MIT License | https://tailwindcss.com */
@layer properties;
:root {
  --color-white: #FFFFFF;
  --color-light-grey: #d5d5d5;
  --color-lighter-grey: #f1f1f1;
  --color-darker-blue: #062E32;
  --color-dark-blue: #16464B;
  --color-lighter-blue: #508285;
  --color-coral: #DD6A6A;
  --color-light-coral: #E79696;
  --color-electric-blue: #44D5E5;
  --color-wine-red: #C50000;
  --font-main: Verdana, sans-serif;
  --font-secondary: Geneva, sans-serif;
  --border-radius-4: 4px;
  --border-radius-8: 8px;
  --border-radius-16: 16px;
  --border-radius-24: 24px;
  --border-radius-32: 32px;
  --border-radius-50: 50px;
}
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-green-600: oklch(62.7% 0.194 149.214);
    --color-green-950: oklch(26.6% 0.065 152.934);
    --color-teal-950: oklch(27.7% 0.046 192.524);
    --color-cyan-950: oklch(30.2% 0.056 229.695);
    --color-blue-900: oklch(37.9% 0.146 265.522);
    --color-blue-950: oklch(28.2% 0.091 267.935);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-xs: 20rem;
    --container-4xl: 56rem;
    --container-6xl: 72rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --radius-3xl: 1.5rem;
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .menu {
    display: flex;
    width: fit-content;
    flex-direction: column;
    flex-wrap: wrap;
    padding: calc(0.25rem * 2);
    --menu-active-fg: var(--color-neutral-content);
    --menu-active-bg: var(--color-neutral);
    font-size: 0.875rem;
    :where(li ul) {
      position: relative;
      margin-inline-start: calc(0.25rem * 4);
      padding-inline-start: calc(0.25rem * 2);
      white-space: nowrap;
      &:before {
        position: absolute;
        inset-inline-start: calc(0.25rem * 0);
        top: calc(0.25rem * 3);
        bottom: calc(0.25rem * 3);
        background-color: var(--color-base-content);
        opacity: 10%;
        width: var(--border);
        content: "";
      }
    }
    :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
      display: none;
    }
    :where(li:not(.menu-title) > *:not(ul, details, .menu-title, .btn)), :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
      display: grid;
      grid-auto-flow: column;
      align-content: flex-start;
      align-items: center;
      gap: calc(0.25rem * 2);
      border-radius: var(--radius-field);
      padding-inline: calc(0.25rem * 3);
      padding-block: calc(0.25rem * 1.5);
      text-align: start;
      transition-property: color, background-color, box-shadow;
      transition-duration: 0.2s;
      transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
      grid-auto-columns: minmax(auto, max-content) auto max-content;
      text-wrap: balance;
      user-select: none;
    }
    :where(li > details > summary) {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
      &::-webkit-details-marker {
        display: none;
      }
    }
    :where(li > details > summary), :where(li > .menu-dropdown-toggle) {
      &:after {
        justify-self: flex-end;
        display: block;
        height: 0.375rem;
        width: 0.375rem;
        rotate: -135deg;
        translate: 0 -1px;
        transition-property: rotate, translate;
        transition-duration: 0.2s;
        content: "";
        transform-origin: 50% 50%;
        box-shadow: 2px 2px inset;
        pointer-events: none;
      }
    }
    :where(li > details[open] > summary):after, :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {
      rotate: 45deg;
      translate: 0 1px;
    }
    :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn) {
      &.menu-focus, &:focus-visible {
        cursor: pointer;
        background-color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
        }
        color: var(--color-base-content);
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
    }
    :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
      cursor: pointer;
      background-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
      }
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
      box-shadow: 0 1px oklch(0% 0 0 / 0.01) inset, 0 -1px oklch(100% 0 0 / 0.01) inset;
    }
    :where(li:empty) {
      background-color: var(--color-base-content);
      opacity: 10%;
      margin: 0.5rem 1rem;
      height: 1px;
    }
    :where(li) {
      position: relative;
      display: flex;
      flex-shrink: 0;
      flex-direction: column;
      flex-wrap: wrap;
      align-items: stretch;
      .badge {
        justify-self: flex-end;
      }
      & > *:not(ul, .menu-title, details, .btn):active, & > *:not(ul, .menu-title, details, .btn).menu-active, & > details > summary:active {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
        color: var(--menu-active-fg);
        background-color: var(--menu-active-bg);
        background-size: auto, calc(var(--noise) * 100%);
        background-image: none, var(--fx-noise);
        &:not(&:active) {
          box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--menu-active-bg);
        }
      }
      &.menu-disabled {
        pointer-events: none;
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
      }
    }
    .dropdown:focus-within {
      .menu-dropdown-toggle:after {
        rotate: 45deg;
        translate: 0 1px;
      }
    }
    .dropdown-content {
      margin-top: calc(0.25rem * 2);
      padding: calc(0.25rem * 2);
      &:before {
        display: none;
      }
    }
  }
  .btn {
    :where(&) {
      width: unset;
    }
    display: inline-flex;
    flex-shrink: 0;
    cursor: pointer;
    flex-wrap: nowrap;
    align-items: center;
    justify-content: center;
    gap: calc(0.25rem * 1.5);
    text-align: center;
    vertical-align: middle;
    outline-offset: 2px;
    webkit-user-select: none;
    user-select: none;
    padding-inline: var(--btn-p);
    color: var(--btn-fg);
    --tw-prose-links: var(--btn-fg);
    height: var(--size);
    font-size: var(--fontsize, 0.875rem);
    font-weight: 600;
    outline-color: var(--btn-color, var(--color-base-content));
    transition-property: color, background-color, border-color, box-shadow;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 0.2s;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    background-color: var(--btn-bg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--btn-noise);
    border-width: var(--border);
    border-style: solid;
    border-color: var(--btn-border);
    text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));
    touch-action: manipulation;
    box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset, var(--btn-shadow);
    --size: calc(var(--size-field, 0.25rem) * 10);
    --btn-bg: var(--btn-color, var(--color-base-200));
    --btn-fg: var(--color-base-content);
    --btn-p: 1rem;
    --btn-border: var(--btn-bg);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));
    }
    --btn-shadow: 0 3px 2px -2px var(--btn-bg),
    0 4px 3px -2px var(--btn-bg);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000),
    0 4px 3px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000);
    }
    --btn-noise: var(--fx-noise);
    .prose & {
      text-decoration-line: none;
    }
    @media (hover: hover) {
      &:hover {
        --btn-bg: var(--btn-color, var(--color-base-200));
        @supports (color: color-mix(in lab, red, red)) {
          --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
        }
      }
    }
    &:focus-visible, &:has(:focus-visible) {
      outline-width: 2px;
      outline-style: solid;
      isolation: isolate;
    }
    &:active:not(.btn-active) {
      translate: 0 0.5px;
      --btn-bg: var(--btn-color, var(--color-base-200));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 5%);
      }
      --btn-border: var(--btn-color, var(--color-base-200));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-border: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
      }
      --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
    }
    &:is(:disabled, [disabled], .btn-disabled) {
      &:not(.btn-link, .btn-ghost) {
        background-color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
        }
        box-shadow: none;
      }
      pointer-events: none;
      --btn-border: #0000;
      --btn-noise: none;
      --btn-fg: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
      }
      @media (hover: hover) {
        &:hover {
          pointer-events: none;
          background-color: var(--color-neutral);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
          }
          --btn-border: #0000;
          --btn-fg: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
          }
        }
      }
    }
    &:is(input[type="checkbox"], input[type="radio"]) {
      appearance: none;
      &::after {
        content: attr(aria-label);
      }
    }
    &:where(input:checked:not(.filter .btn)) {
      --btn-color: var(--color-primary);
      --btn-fg: var(--color-primary-content);
      isolation: isolate;
    }
  }
  .list {
    display: flex;
    flex-direction: column;
    font-size: 0.875rem;
    :where(.list-row) {
      --list-grid-cols: minmax(0, auto) 1fr;
      position: relative;
      display: grid;
      grid-auto-flow: column;
      gap: calc(0.25rem * 4);
      border-radius: var(--radius-box);
      padding: calc(0.25rem * 4);
      word-break: break-word;
      grid-template-columns: var(--list-grid-cols);
      &:has(.list-col-grow:nth-child(1)) {
        --list-grid-cols: 1fr;
      }
      &:has(.list-col-grow:nth-child(2)) {
        --list-grid-cols: minmax(0, auto) 1fr;
      }
      &:has(.list-col-grow:nth-child(3)) {
        --list-grid-cols: minmax(0, auto) minmax(0, auto) 1fr;
      }
      &:has(.list-col-grow:nth-child(4)) {
        --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
      }
      &:has(.list-col-grow:nth-child(5)) {
        --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
      }
      &:has(.list-col-grow:nth-child(6)) {
        --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto)
        minmax(0, auto) 1fr;
      }
      :not(.list-col-wrap) {
        grid-row-start: 1;
      }
    }
    & > :not(:last-child) {
      &.list-row, .list-row {
        &:after {
          content: "";
          border-bottom: var(--border) solid;
          inset-inline: var(--radius-box);
          position: absolute;
          bottom: calc(0.25rem * 0);
          border-color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-base-content) 5%, transparent);
          }
        }
      }
    }
  }
  .card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--radius-box);
    outline-width: 2px;
    transition: outline 0.2s ease-in-out;
    outline: 0 solid #0000;
    outline-offset: 2px;
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:focus-visible {
      outline-color: currentColor;
    }
    :where(figure:first-child) {
      overflow: hidden;
      border-start-start-radius: inherit;
      border-start-end-radius: inherit;
      border-end-start-radius: unset;
      border-end-end-radius: unset;
    }
    :where(figure:last-child) {
      overflow: hidden;
      border-start-start-radius: unset;
      border-start-end-radius: unset;
      border-end-start-radius: inherit;
      border-end-end-radius: inherit;
    }
    &:where(.card-border) {
      border: var(--border) solid var(--color-base-200);
    }
    &:where(.card-dash) {
      border: var(--border) dashed var(--color-base-200);
    }
    &.image-full {
      display: grid;
      > * {
        grid-column-start: 1;
        grid-row-start: 1;
      }
      > .card-body {
        position: relative;
        color: var(--color-neutral-content);
      }
      :where(figure) {
        overflow: hidden;
        border-radius: inherit;
      }
      > figure img {
        height: 100%;
        object-fit: cover;
        filter: brightness(28%);
      }
    }
    figure {
      display: flex;
      align-items: center;
      justify-content: center;
    }
    &:has(> input:is(input[type="checkbox"], input[type="radio"])) {
      cursor: pointer;
      user-select: none;
    }
    &:has(> :checked) {
      outline: 2px solid currentColor;
    }
  }
  .checkbox {
    border: var(--border) solid var(--input-color, var(--color-base-content));
    @supports (color: color-mix(in lab, red, red)) {
      border: var(--border) solid var(--input-color, color-mix(in oklab, var(--color-base-content) 20%, #0000));
    }
    position: relative;
    display: inline-block;
    flex-shrink: 0;
    cursor: pointer;
    appearance: none;
    border-radius: var(--radius-selector);
    padding: calc(0.25rem * 1);
    vertical-align: middle;
    color: var(--color-base-content);
    box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 0 #0000 inset, 0 0 #0000;
    transition: background-color 0.2s, box-shadow 0.2s;
    --size: calc(var(--size-selector, 0.25rem) * 6);
    width: var(--size);
    height: var(--size);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    &:before {
      --tw-content: "";
      content: var(--tw-content);
      display: block;
      width: 100%;
      height: 100%;
      rotate: 45deg;
      background-color: currentcolor;
      opacity: 0%;
      transition: clip-path 0.3s, opacity 0.1s, rotate 0.3s, translate 0.3s;
      transition-delay: 0.1s;
      clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 70% 80%, 70% 100%);
      box-shadow: 0px 3px 0 0px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
      font-size: 1rem;
      line-height: 0.75;
    }
    &:focus-visible {
      outline: 2px solid var(--input-color, currentColor);
      outline-offset: 2px;
    }
    &:checked, &[aria-checked="true"] {
      background-color: var(--input-color, #0000);
      box-shadow: 0 0 #0000 inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
      &:before {
        clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 0%, 70% 0%, 70% 100%);
        opacity: 100%;
      }
      @media (forced-colors: active) {
        &:before {
          rotate: 0deg;
          background-color: transparent;
          --tw-content: "✔︎";
          clip-path: none;
        }
      }
      @media print {
        &:before {
          rotate: 0deg;
          background-color: transparent;
          --tw-content: "✔︎";
          clip-path: none;
        }
      }
    }
    &:indeterminate {
      background-color: var(--input-color, var(--color-base-content));
      @supports (color: color-mix(in lab, red, red)) {
        background-color: var(--input-color, color-mix(in oklab, var(--color-base-content) 20%, #0000));
      }
      &:before {
        rotate: 0deg;
        opacity: 100%;
        translate: 0 -35%;
        clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 80% 80%, 80% 100%);
      }
    }
    &:disabled {
      cursor: not-allowed;
      opacity: 20%;
    }
  }
  .mx-auto {
    margin-inline: auto;
  }
  .label {
    display: inline-flex;
    align-items: center;
    gap: calc(0.25rem * 1.5);
    white-space: nowrap;
    color: currentcolor;
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, currentcolor 60%, transparent);
    }
    &:has(input) {
      cursor: pointer;
    }
    &:is(.input > *, .select > *) {
      display: flex;
      height: calc(100% - 0.5rem);
      align-items: center;
      padding-inline: calc(0.25rem * 3);
      white-space: nowrap;
      font-size: inherit;
      &:first-child {
        margin-inline-start: calc(0.25rem * -3);
        margin-inline-end: calc(0.25rem * 3);
        border-inline-end: var(--border) solid currentColor;
        @supports (color: color-mix(in lab, red, red)) {
          border-inline-end: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
        }
      }
      &:last-child {
        margin-inline-start: calc(0.25rem * 3);
        margin-inline-end: calc(0.25rem * -3);
        border-inline-start: var(--border) solid currentColor;
        @supports (color: color-mix(in lab, red, red)) {
          border-inline-start: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
        }
      }
    }
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .card-body {
    display: flex;
    flex: auto;
    flex-direction: column;
    gap: calc(0.25rem * 2);
    padding: var(--card-p, 1.5rem);
    font-size: var(--card-fs, 0.875rem);
    :where(p) {
      flex-grow: 1;
    }
  }
  .card-actions {
    display: flex;
    flex-wrap: wrap;
    align-items: flex-start;
    gap: calc(0.25rem * 2);
  }
  .card-title {
    display: flex;
    align-items: center;
    gap: calc(0.25rem * 2);
    font-size: var(--cardtitle-fs, 1.125rem);
    font-weight: 600;
  }
  .flex {
    display: flex;
  }
  .h-full {
    height: 100%;
  }
  .w-full {
    width: 100%;
  }
  .max-w-6xl {
    max-width: var(--container-6xl);
  }
  .max-w-xs {
    max-width: var(--container-xs);
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-3xl {
    border-radius: var(--radius-3xl);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .bg-base-100 {
    background-color: var(--color-base-100);
  }
  .bg-teal-950 {
    background-color: var(--color-teal-950);
  }
  .object-cover {
    object-fit: cover;
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-teal-950 {
    color: var(--color-teal-950);
  }
  .text-white {
    color: var(--color-white);
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .lg\:w-1\/2 {
    @media (width >= 64rem) {
      width: calc(1/2 * 100%);
    }
  }
  .lg\:flex-row {
    @media (width >= 64rem) {
      flex-direction: row;
    }
  }
}
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
::selection {
  color: var(--color-white);
  background-color: var(--color-dark-blue);
}
body {
  display: flex;
  height: auto;
  width: 100%;
  max-width: 100%;
  min-width: 100%;
  flex-direction: column;
  flex-wrap: nowrap;
  flex: 1 1 0;
  align-items: center;
  justify-items: center;
  overflow-X: hidden;
  background-color: var(--color-white);
  background-image: url(../Public/Images/yarnBackgroundTexture.svg);
  background-size: auto;
  background-repeat: repeat;
  background-position: center;
  background-attachment: fixed;
}
header {
  position: sticky;
  z-index: 50;
  display: block;
  width: 100%;
  height: auto;
  top: 0;
  background-color: var(--color-dark-blue);
}
nav {
  position: relative;
  display: flex;
  height: auto;
  width: auto;
  margin: auto;
  padding: 1.3% 10%;
  flex-wrap: nowrap;
  flex-direction: row;
  background-color: var(--color-dark-blue);
  justify-content: space-evenly;
  align-content: center;
}
.menu-toggle {
  display: none;
}
.menu-button {
  position: absolute;
  display: none;
  height: 3rem;
  width: 3rem;
  margin: auto auto auto 0;
  flex: 0 1 3rem;
  background-color: var(--color-white);
  border-style: none;
  border-radius: var(--border-radius-50);
  cursor: pointer;
}
.search-bar-container-hidden {
  display: none;
  margin: auto;
  height: 12vh;
  width: 100%;
  justify-content: center;
  align-content: center;
  background-color: var(--color-dark-blue);
}
.search-bar-container-visible {
  position: absolute;
  display: flex;
  margin: auto;
  height: 12vh;
  width: 100%;
  justify-content: center;
  background-color: var(--color-dark-blue);
  z-index: 75;
}
.search-bar-input-container {
  position: relative;
  display: flex;
  height: auto;
  width: 40%;
  margin: auto;
  padding: 0.5rem;
  justify-content: center;
  background-color: var(--color-white);
  border-radius: var(--border-radius-16);
}
.search-bar-button {
  display: inline;
  height: 2rem;
  width: auto;
  margin: auto;
  background-color: var(--color-white);
  border-style: none;
  vertical-align: middle;
  cursor: pointer;
  transition: transform 0.3s ease-in-out;
}
.close-button {
  display: inline;
  height: 2rem;
  width: auto;
  margin: auto;
  background-color: var(--color-white);
  border-style: none;
  vertical-align: middle;
  cursor: pointer;
}
.search-bar-button:hover, .close-button:hover {
  opacity: 70%;
}
.search-bar-button img, .close-button img {
  display: inline;
  height: 100%;
  width: 100%;
  margin: auto;
}
.search-bar-input {
  position: relative;
  display: inline;
  height: auto;
  width: 80%;
  padding: 0.5rem;
  border-style: none;
  color: var(--color-darker-blue);
  font-size: 18px;
}
.search-bar-input:hover {
  border-style: none;
  border-radius: var(--border-radius-8);
  box-shadow: 2px 2px 2px var(--color-light-grey);
  cursor: pointer;
}
.search-bar-input:focus {
  outline: none;
  border-style: none;
}
.svg-logo {
  position: relative;
  display: inline;
  flex: 0 1 auto;
  height: 12vh;
  width: auto;
  margin: auto auto auto 0;
  align-self: center;
}
.svg-logo:hover {
  opacity: 70%;
  cursor: pointer;
}
.svg-logo img {
  display: inline;
  margin: auto;
  height: inherit;
  width: inherit;
  max-width: inherit;
  max-height: inherit;
  object-fit: cover;
  image-rendering: auto;
}
.nav-button-bar {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  flex: 0 1 0;
  width: auto;
  margin: 0 0 0 auto;
  justify-content: flex-end;
}
.search-button {
  height: 3rem;
  width: 3rem;
  margin: 1rem;
  flex: 0 1 3rem;
  background-color: var(--color-white);
  border-style: none;
  border-radius: var(--border-radius-50);
  cursor: pointer;
}
.account-button {
  display: inline;
  height: 3rem;
  width: 3rem;
  margin: 1rem;
  flex: 0 1 3rem;
  background-color: var(--color-white);
  border-style: none;
  border-radius: var(--border-radius-50);
  cursor: pointer;
}
.cart-button {
  height: 3rem;
  width: 3rem;
  margin: 1rem;
  flex: 0 1 3rem;
  background-color: var(--color-white);
  border-style: none;
  border-radius: var(--border-radius-50);
  cursor: pointer;
}
.search-button img, .account-button img, .cart-button img, .menu-button img {
  display: block;
  height: 90%;
  width: auto;
  margin: auto;
}
.account-button:hover , .search-button:hover, .cart-button:hover {
  background-color: var(--color-lighter-grey);
}
.nav-link-list {
  display: flex;
  flex: 2 1 0;
  overflow: hidden;
  list-style: none;
  margin: auto;
  width: auto;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease-in-out;
}
.nav-link-sub-list {
  display: none;
  overflow: hidden;
  list-style: none;
  flex: 2 1 0;
  margin: auto;
  width: 10rem;
  max-width: 10rem;
  min-width: 10rem;
  justify-items: center;
  align-items: center;
  background-color: var(--color-white);
  border-width: 0 1px 1px 1px;
  border-style: solid;
  border-color: var(--color-light-grey);
  border-radius: var(--border-radius-4);
}
.nav-link-list li {
  display: inline;
  height: auto;
  width: 10rem;
  max-width: 10rem;
  min-width: 10rem;
  flex: 0 1 5rem;
  text-align: center;
  align-self: center;
}
.nav-link-sub-list li {
  display: block;
  flex: 1 1 10;
  text-align: left;
  align-self: center;
  width: auto;
  background-color: var(--color-white);
  border-width: 2px 0 0 0;
  border-style: solid;
  border-color: var(--color-lighter-grey);
}
.nav-link-sub-list li:hover {
  background-color: var(--color-lighter-grey);
  cursor: pointer;
}
.nav-link-list li a {
  display: block;
  padding: 1rem 1.2rem;
  color: var(--color-white);
  font-size: 1.4rem;
  font-family: var(--font-main);
  cursor: pointer;
}
.nav-link-sub-list li a {
  display: inline-block;
  color: var(--color-dark-blue);
  font-size: 1rem;
  font-weight: bold;
  font-family: var(--font-secondary);
  cursor: pointer;
}
.nav-link-list li a:hover, .nav-link-sub-list li a:hover {
  text-decoration: underline;
  text-decoration-thickness: 0.08rem;
}
li:hover .nav-link-sub-list {
  position: absolute;
  z-index: 100;
  display: flex;
  flex-direction: column;
}
.nav-decoration-line {
  height: 1rem;
  width: 100%;
  clear: both;
  background-color: var(--color-coral);
}
.separation-line {
  height: 1rem;
  width: 100%;
  clear: both;
  background-color: var(--color-white);
}
.new-art, .best-selling-art, .seasonal-art {
  display: flex;
  height: 100%;
  width: 95%;
  flex-direction: column;
  flex: 1 1 0;
  text-align: center;
}
.new-art-title, .best-selling-art-title, .seasonal-art-title, .create-account-fieldset legend {
  display: inline;
  height: auto;
  margin: 2em auto 1em auto;
  text-align: center;
  font-size: 1.6rem;
  font-weight: bold;
  font-family: var(--font-main);
  color: var(--color-dark-blue);
}
.new-art-carousel, .best-selling-art-carousel, .seasonal-art-carousel {
  display: flex;
  width: 100%;
  height: 100%;
  margin: 0 auto 1em auto;
  flex-direction: row;
  flex: 1 1 0;
  align-items: center;
  justify-content: space-evenly;
  overflow: visible;
  transform-style: flat;
}
.previous-element-button-container, .next-element-button-container {
  display: flex;
  position: relative;
  height: 15%;
  width: auto;
  margin: auto;
  overflow: visible;
}
.previous-element-button, .next-element-button {
  height: 100%;
  width: 100%;
  background-color: transparent;
  border-style: none;
  cursor: pointer;
}
.previous-element-button::before, .next-element-button::before {
  display: flex;
  height: 100%;
  width: 100%;
  margin: auto;
  align-items: center;
  justify-content: center;
  font-size: 3.2em;
  font-weight: bold;
  color: var(--color-darker-blue);
}
.previous-element-button::before {
  content: "<";
}
.next-element-button::before {
  content: ">";
}
.previous-element-button:hover, .next-element-button:hover {
  opacity: 70%;
  cursor: pointer;
}
.new-art-item-container, .best-selling-art-item-container, .seasonal-art-item-container {
  position: relative;
  display: flex;
  overflow-x: scroll;
  height: 100%;
  width: 90%;
  margin: auto;
  padding: 1% 1% 1% 0;
  border-width: 0.5em 1.5em;
  border-style: solid;
  align-items: start;
  flex-direction: row;
  flex: 2 1 0;
  gap: 1.5em;
  justify-content: start;
}
.new-art-item-container {
  background-color: var(--color-light-grey);
  border-radius: var(--border-radius-24);
  border-color: var(--color-light-grey);
}
.best-selling-art-item-container {
  background-color: var(--color-coral);
  border-radius: var(--border-radius-24);
  border-color: var(--color-coral);
}
.seasonal-art-item-container {
  background-color: var(--color-electric-blue);
  border-radius: var(--border-radius-24);
  border-color: var(--color-electric-blue);
}
.art-item {
  position: relative;
  display: grid;
  height: 100%;
  width: 18%;
  max-width: 18%;
  min-width: 18%;
  overflow: hidden;
  grid-template-columns: 1fr;
  grid-template-rows: 50% 50%;
  justify-items: center;
  text-align: center;
  padding: 1.5%;
  gap: 0.5rem;
  background-color: var(--color-white);
  border-style: solid;
  border-color: var(--color-dark-blue);
  border-radius: var(--border-radius-16);
}
.art-item-image-container {
  position: relative;
  display: flex;
  height: 15vh;
  width: auto;
  overflow: hidden;
}
.art-item-image-container img, .art-product-image-container img {
  display: inline;
  margin: auto;
  height: inherit;
  width: inherit;
  max-width: inherit;
  max-height: inherit;
  flex: 0 1 0;
  object-fit: cover;
  border-radius: var(--border-radius-24);
  image-rendering: auto;
}
.art-item img:hover {
  opacity: 70%;
  cursor: pointer;
}
.art-desc-container {
  position: relative;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: auto auto;
  width: 100%;
  margin: auto;
  gap: 0.5rem;
}
.art-desc {
  position: relative;
  display: inline;
  margin: auto;
  width: 100%;
  overflow: hidden;
  overflow-wrap: break-word;
  text-align: justify;
  font-size: 1.2rem;
  font-weight: bold;
  font-family: var(--font-secondary);
  color: var(--color-dark-blue);
  cursor: pointer;
}
.art-price {
  display: flex;
  position: relative;
  margin: auto;
  width: auto;
  font-size: 1.2rem;
  font-weight: normal;
  font-family: var(--font-secondary);
  color: var(--color-dark-blue);
  text-align: center;
  cursor: pointer;
}
.art-desc::first-letter, .art-price::first-letter {
  text-transform: capitalize;
}
.art-desc:hover, .art-price:hover {
  text-decoration: underline;
  text-decoration-color: var(--color-dark-blue);
  text-decoration-thickness: 0.1rem;
  cursor: pointer;
}
.carousel-indicator {
  margin: auto auto 1em auto;
}
.shipping-info-banner {
  display: flex;
  height: 5rem;
  width: 100%;
  padding: 2%;
  align-items: center;
  justify-content: space-evenly;
  background-image: linear-gradient(to bottom, var(--color-wine-red), var(--color-wine-red), var(--color-coral));
  color: var(--color-white);
  font-family: var(--font-secondary);
  font-size: 1.2rem;
  text-align: justify;
}
.info-banner-statement {
  display: flex;
}
.shipping-icon, .return-icon, .star-review-icon {
  display: flex;
  height: 1.6rem;
  width: auto;
  margin: auto 0.5rem auto auto;
}
.shipping-icon img, .return-icon img, .star-review-icon img {
  height: auto;
  width: auto;
}
footer {
  height: auto;
  width: 100%;
  max-width: 100%;
  background-color: var(--color-white);
}
.footer-links-bar {
  display: flex;
  height: auto;
  width: 100%;
  margin: auto;
  padding: 1rem;
  background-color: var(--color-white);
  border-color: var(--color-light-grey);
  border-style: solid;
  border-width: 3px 0 0 0;
  align-items: center;
  justify-content: space-evenly;
}
.about-links-container , .help-links-container , .store-links-container {
  display: flex;
  flex-direction: column;
  height: auto;
  width: auto;
  margin: auto;
  flex: 1 1 auto;
  justify-content: center;
  align-content: center;
}
.about-links-container h4, .help-links-container h4, .store-links-container h4 {
  display: block;
  padding: 0.5rem;
  color: var(--color-darker-blue);
  flex: 1 2 0;
  text-align: left;
  font-size: 1.5rem;
  line-height: 1.5rem;
  font-family: var(--font-main);
  line-height: 10px;
  border-bottom-color: var(--color-darker-blue);
}
.about-list, .help-list, .store-list {
  display: block;
  list-style: none;
  justify-content: center;
}
.about-list li, .help-list li, .store-list li {
  display: grid;
  margin: auto;
  padding: 0.5rem;
  flex: 1 1 0;
}
.footer-links-bar ul li a {
  display: block;
  color: var(--color-darker-blue);
  font-size: 1.2rem;
  font-family: var(--font-main);
  line-height: 1.2rem;
  cursor: pointer;
}
.footer-links-bar ul li a:hover {
  text-decoration: underline;
  text-decoration-thickness: 1.2px;
  text-decoration-color: var(--color-darker-blue);
}
.footer-brand-links-bar {
  display: flex;
  height: auto;
  width: auto;
  padding: 0.3rem 0;
  background-color: var(--color-dark-blue);
  justify-content: center;
  align-items: center;
}
.footer-brand-links-bar .svg-logo {
  display: inline;
  height: 4rem;
  width: auto;
  margin: auto auto auto 5%;
  cursor: pointer;
}
.social-media-links {
  display: flex;
  height: auto;
  width: auto;
  margin: auto 5% auto auto;
}
.social-media-links .instagram-button, .social-media-links .youtube-button {
  display: flex;
  height: 2.2rem;
  width: 2.2rem;
  margin: 1.5rem;
  background-color: var(--color-white);
  border-style: none;
  border-radius: var(--border-radius-24);
  cursor: pointer;
}
.instagram-button:hover, .youtube-button:hover {
  background-color: var(--color-lighter-grey);
}
.youtube-button img {
  height: 65%;
  width: auto;
  margin: auto;
}
.instagram-button a {
  height: 65%;
  width: auto;
  margin: auto;
}
.instagram-button a img {
  height: 100%;
  width: auto;
  margin: auto;
}
.footer-copyright-content {
  display: flex;
  height: auto;
  width: auto;
  padding: 1rem 1.5rem 1.5rem 0;
  background-color: var(--color-darker-blue);
  border-color: var(--color-lighter-blue);
  border-style: solid;
  border-width: 2px 0 0 0;
  text-align: right;
  justify-content: right;
}
.footer-copyright-content small {
  color: var(--color-white);
  font: var(--font-secondary);
  font-size: 1rem;
}
.create-account-section {
  height: auto;
  width: 100%;
  padding: 2%;
}
.create-account-form {
  display: flex;
  height: auto;
  width: 40%;
  margin: auto;
  border-style: none;
  background-color: var(--color-white);
  border-style: solid;
  border-color: var(--color-dark-blue);
  border-width: 2.5px;
  border-radius: var(--border-radius-24);
}
.create-account-fieldset {
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
  max-width: 100%;
  border-style: none;
  text-align: justify;
}
.create-account-fieldset legend {
  z-index: 1;
  margin: auto;
  padding: 10px;
  height: auto;
  width: 100%;
  border-width: 0 0 2px 0;
  border-style: solid;
  border-color: var(--color-dark-blue);
  text-align: center;
  justify-content: center;
}
.create-account-fieldset legend::before {
  content: "🧶";
}
.name-input-container, .email-input-container, .password-input-container, .desc-container, .techniques-options-container, .age-range-container {
  display: block;
  margin: 15px 5%;
  height: auto;
  width: auto;
  text-align: justify;
}
.create-account-fieldset label {
  display: flex;
  height: auto;
  width: 100%;
  margin: auto;
  text-align: justify;
  font-size: 14px;
  font-family: var(--font-secondary);
  color: var(--color-dark-blue);
}
.create-account-fieldset input {
  display: flex;
  width: 100%;
  margin: 5px 0 10px 0;
  padding: 8px;
  border: 1.7px solid var(--color-dark-blue);
  border-radius: var(--border-radius-16);
  font-size: 12px;
}
.create-account-fieldset input:hover {
  box-shadow: 2px 2px 4px var(--color-lighter-blue);
  cursor: pointer;
}
.create-account-fieldset input:focus {
  outline: var(--color-electric-blue);
  border: 1.7px solid var(--color-electric-blue);
  border-radius: var(--border-radius-16);
}
.desc-container textarea {
  display: block;
  height: 100px;
  width: 100%;
  margin: 10px 0 0 0;
  padding: 8px;
  font-size: 12px;
  font-family: var(--font-secondary);
  columns: 50;
  border: 1.7px solid var(--color-dark-blue);
  border-radius: var(--border-radius-16);
  resize: none;
}
.desc-container textarea:focus {
  outline: var(--color-electric-blue);
  border: 1.7px solid var(--color-electric-blue);
  border-radius: var(--border-radius-16);
}
.desc-container textarea:hover {
  box-shadow: 2px 2px 4px var(--color-lighter-blue);
  cursor: pointer;
}
.techniques-options-container select {
  height: auto;
  width: 100%;
  margin: 5px 0 0 0;
  padding: 8px;
  color: var(--color-darker-blue);
  border: 2px solid var(--color-dark-blue);
  border-radius: var(--border-radius-16);
  font-size: 12px;
}
.techniques-options-container select:focus {
  outline: var(--color-electric-blue);
  border: 1.7px solid var(--color-electric-blue);
  border-radius: var(--border-radius-16);
}
.techniques-options-container select:hover {
  box-shadow: 2px 2px 4px var(--color-lighter-blue);
  cursor: pointer;
}
.create-account-form button {
  display: block;
  height: auto;
  width: auto;
  margin: 20px auto;
  padding: 15px 30px;
  text-align: justify;
  font-size: 16px;
  font-family: var(--font-secondary);
  color: var(--color-white);
  background-color: var(--color-darker-blue);
  border-style: solid;
  border-color: var(--color-darker-blue);
  border-radius: var(--border-radius-16);
}
.create-account-form button:hover {
  background-color: var(--color-lighter-blue);
  border-color: var(--color-lighter-blue);
}
.art-product-image-container {
  position: relative;
  display: flex;
  height: 70vh;
  width: auto;
  overflow: hidden;
}
.product {
  height: auto;
  width: auto;
  margin: 2%;
  background-color: var(--color-white);
  color: var(--color-dark-blue);
}
@media only screen and (max-width: 480px) {
  .search-bar-container-visible {
    height: 6vh;
  }
  .search-bar-input-container {
    width: 80%;
  }
  nav .svg-logo {
    height: 4vh;
    margin: auto;
  }
  .art-item {
    width: 68%;
    max-width: 68%;
    min-width: 68%;
    padding: 4%;
  }
  .copyright-content {
    font-size: 0.5rem;
  }
  .create-account-form {
    width: 80%;
    max-width: 80%;
  }
  .product {
    margin: 5%;
  }
}
@media only screen and (max-width: 768px) {
  .search-bar-container-visible {
    height: 8vh;
  }
  .search-bar-input-container {
    width: 60%;
  }
  nav .svg-logo {
    height: 6vh;
    margin: auto;
  }
  .search-button, .account-button, .cart-button, .menu-button {
    height: 2.5rem;
    width: 2.5rem;
    margin: 0.5rem;
    flex: 0 1 2.5rem;
  }
  .new-art-title, .best-selling-art-title, .seasonal-art-title {
    font-size: 1.4rem;
  }
  .art-item-image-container {
    height: 10vh;
  }
  .art-desc, .art-price {
    font-size: 1rem;
  }
  .shipping-info-banner {
    font-size: 0.8rem;
    text-align: left;
  }
  .footer-links-bar ul li a {
    font-size: 0.8rem;
  }
  .about-links-container h4, .help-links-container h4, .store-links-container h4 {
    font-size: 1rem;
  }
  .copyright-content {
    font-size: 1rem;
  }
}
@media only screen and (min-width: 500px) and (max-width: 800px) {
  .art-item {
    width: 35%;
    max-width: 35%;
    min-width: 35%;
    padding: 2.5%;
  }
}
@media only screen and (max-width: 1200px) {
  nav {
    padding: 1.3% 5%;
  }
  .search-bar-container-visible {
    height: 10vh;
  }
  nav .svg-logo {
    height: 8vh;
    margin: auto;
  }
  .menu-button {
    position: relative;
    display: inline;
    z-index: 70;
  }
  .nav-link-list {
    position: fixed;
    display: flex;
    top: 0;
    left: 0;
    height: 100%;
    width: auto;
    padding: 20% 0 0 2%;
    margin: auto;
    flex-direction: column;
    justify-content: flex-start;
    color: var(--color-dark-blue);
    background-color: var(--color-white);
    z-index: 30;
    transform: translateX(-100%);
  }
  .nav-link-list li a {
    color: var(--color-dark-blue);
    font-size: 1em;
    text-align: left;
  }
  .nav-link-sub-list li a {
    color: var(--color-dark-blue);
    font-size: 0.8em;
  }
  .menu-toggle:checked ~ nav .nav-link-list {
    overflow: visible;
    transform: translateX(0);
    background-color: var(--color-white);
  }
  .menu-toggle:checked ~ nav .menu-button {
    background-color: transparent;
  }
  .nav-link-sub-list {
    transform: translate(82%, -20%);
    border-width: 1px;
    transition: transform 0.2s ease-in;
    z-index: 35;
  }
  .art-item-image-container {
    height: 12vh;
  }
}
@layer base {
  :where(:root),:root:has(input.0theme-controller[value=light]:checked),[data-theme=light] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98% 0 0);
    --color-base-300: oklch(95% 0 0);
    --color-base-content: oklch(21% 0.006 285.885);
    --color-primary: oklch(45% 0.24 277.023);
    --color-primary-content: oklch(93% 0.034 272.788);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root {
    --fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 200 200'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='200' height='200' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
  }
}
@layer base {
  :root {
    scrollbar-color: currentColor #0000;
    @supports (color: color-mix(in lab, red, red)) {
      scrollbar-color: color-mix(in oklch, currentColor 35%, #0000) #0000;
    }
  }
}
@layer base {
  @property --radialprogress {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 0%;
  }
}
@layer base {
  :root:has( .modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not([class*="drawer-open"]) > .drawer-toggle:checked ) {
    overflow: hidden;
  }
}
@layer base {
  :where( :root:has( .modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not(.drawer-open) > .drawer-toggle:checked ) ) {
    scrollbar-gutter: stable;
    background-image: linear-gradient(var(--color-base-100), var(--color-base-100));
    --root-bg: var(--color-base-100);
    @supports (color: color-mix(in lab, red, red)) {
      --root-bg: color-mix(in srgb, var(--color-base-100), oklch(0% 0 0) 40%);
    }
  }
  :where(.modal[open], .modal-open, .modal-toggle:checked + .modal):not(.modal-start, .modal-end) {
    scrollbar-gutter: stable;
  }
  @supports (width: if(else: 1px)) and (animation-timeline: scroll()) {
    :root {
      animation: set-page-has-scroll forwards;
      animation-timeline: scroll();
    }
    @keyframes set-page-has-scroll {
      0%, to {
        --page-has-scroll: 1;
      }
    }
    :where( :root:has( .modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not(.drawer-open) > .drawer-toggle:checked ) ) {
      scrollbar-gutter: if(style(--page-has-scroll: 1): stable; else: unset);
    }
  }
}
@layer base {
  :root, [data-theme] {
    background-color: var(--root-bg, var(--color-base-100));
    color: var(--color-base-content);
  }
}
@keyframes rating {
  0%, 40% {
    scale: 1.1;
    filter: brightness(1.05) contrast(1.05);
  }
}
@keyframes dropdown {
  0% {
    opacity: 0;
  }
}
@keyframes radio {
  0% {
    padding: 5px;
  }
  50% {
    padding: 3px;
  }
}
@keyframes toast {
  0% {
    scale: 0.9;
    opacity: 0;
  }
  100% {
    scale: 1;
    opacity: 1;
  }
}
@keyframes skeleton {
  0% {
    background-position: 150%;
  }
  100% {
    background-position: -50%;
  }
}
@keyframes progress {
  50% {
    background-position-x: -115%;
  }
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
    }
  }
}
